############################## Создание файлов и сохранение их внутри контейнера ##############################

# Запускаем образ ngnix:
docker run -d --name web nginx

# В команде выше нам не потребовалось явно указывать команду запуска, т.к. она задана при создании образа "nginx".

# Мы можем заходить внутрь контейнера - для этого выполняем "docker exec -it {container_name} {command}"
     "-it": от "interactive tty" - чтобы мы могли печатать на клавиатуре что-то и это что-то попадало в контейнер и чтобы результат обработк в контейнере отображался у нас.

# Пример: запускаем команду "bash" внутри контейнера:
#  здесь "web" - это имя контейнера, "bash" - имя команды
docker exec -it web bash
OUTPUT:
user@pc:~/docker_learn$ docker exec -it web bash
root@eb36acdfb0f5:/# 

# Создадим в корне файл "12345678":


# Удалить все контейнеры
docker ps -a --format "{{.Names}}" | tr '\n' ' ' | xargs docker rm

# Второй вариант удаления ВСЕХ контейнеров:
docker ps -a | awk 'NR>1 {print $1}' | tr '\n' ' ' | xargs docker rm

# Создаем в host-системе папку "/data_shared"
sudo mkdir /data_shared

# Запускаем контейнер с именем "web" из образа "nginx" и указываем, что папку /data_shared нужно прокинуть в /data_internal.
# Указываем "-v", от "volume" для того, чтобы прокинуть папку "/data_shared/", существующую на хосте в контейнер.
# Там она будет существовать как "/data_internal/":
docker run -d --name web -v /data_shared:/data_internal/ nginx

